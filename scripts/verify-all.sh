#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}\n"

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —É—Ç–∏–ª–∏—Ç
check_prerequisites() {
    echo -e "${BLUE}üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —É—Ç–∏–ª–∏—Ç...${NC}"
    local prerequisites=("docker" "docker-compose" "yamllint" "git")
    local missing=0

    for cmd in "${prerequisites[@]}"; do
        if ! command -v "$cmd" &> /dev/null; then
            echo -e "${RED}‚ùå $cmd –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
            missing=$((missing + 1))
            case $cmd in
                "yamllint")
                    echo "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install yamllint"
                    ;;
                "docker")
                    echo "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install docker.io"
                    ;;
                "docker-compose")
                    echo "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install docker-compose"
                    ;;
            esac
        else
            echo -e "${GREEN}‚úì $cmd —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        fi
    done

    if [ $missing -gt 0 ]; then
        echo -e "${RED}‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —É—Ç–∏–ª–∏—Ç—ã –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
check_project_structure() {
    echo -e "\n${BLUE}üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
    local required_dirs=("cloud-init" "docker/compose" "docker/config" "scripts" "models")
    local required_files=(
        "cloud-init/user-data.yaml"
        "docker/compose/production.yml"
        "docker/config/.env"
        "docker/Dockerfile"
        ".yamllint"
    )
    local missing=0

    for dir in "${required_dirs[@]}"; do
        if [ -d "$dir" ]; then
            echo -e "${GREEN}‚úì –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $dir —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
        else
            echo -e "${RED}‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $dir –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç${NC}"
            missing=$((missing + 1))
        fi
    done

    for file in "${required_files[@]}"; do
        if [ -f "$file" ]; then
            echo -e "${GREEN}‚úì –§–∞–π–ª $file —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
        else
            echo -e "${RED}‚ùå –§–∞–π–ª $file –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç${NC}"
            missing=$((missing + 1))
        fi
    done

    return $missing
}
# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ YAML —Ñ–∞–π–ª–æ–≤
check_yaml_files() {
    echo -e "\n${BLUE}üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ YAML —Ñ–∞–π–ª–æ–≤...${NC}"
    local yaml_files=("cloud-init/user-data.yaml" "docker/compose/production.yml")
    local has_errors=0

    for file in "${yaml_files[@]}"; do
        echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ $file:${NC}"
        if yamllint "$file"; then
            echo -e "${GREEN}‚úì $file –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É${NC}"
        else
            echo -e "${RED}‚ùå $file —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏${NC}"
            has_errors=1
        fi
    done

    return $has_errors
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env_variables() {
    echo -e "\n${BLUE}üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
    local env_file="docker/config/.env"
    local required_vars=(
        "DB_NAME"
        "DB_USER"
        "DB_PASSWORD"
        "POSTGRES_DB"
        "POSTGRES_USER"
        "POSTGRES_PASSWORD"
        "REDIS_PASSWORD"
        "OPENAI_API_KEY"
        "RHASSPY_API_KEY"
    )
    local missing=0

    if [ ! -f "$env_file" ]; then
        echo -e "${RED}‚ùå –§–∞–π–ª $env_file –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        return 1
    fi

    for var in "${required_vars[@]}"; do
        if grep -q "^${var}=" "$env_file"; then
            value=$(grep "^${var}=" "$env_file" | cut -d'=' -f2)
            if [ -z "$value" ]; then
                echo -e "${RED}‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var –∏–º–µ–µ—Ç –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ${NC}"
                missing=$((missing + 1))
            else
                echo -e "${GREEN}‚úì –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
            fi
        else
            echo -e "${RED}‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç${NC}"
            missing=$((missing + 1))
        fi
    done

    return $missing
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
check_docker_config() {
    echo -e "\n${BLUE}üêã –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"
    
    echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile:${NC}"
    if [ -f "docker/Dockerfile" ]; then
        if docker build -f docker/Dockerfile . -t test_build --quiet; then
            echo -e "${GREEN}‚úì Dockerfile –≤–∞–ª–∏–¥–µ–Ω${NC}"
        else
            echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –≤ Dockerfile${NC}"
            return 1
        fi
    else
        echo -e "${RED}‚ùå Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        return 1
    fi

    echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose:${NC}"
    if docker-compose -f docker/compose/production.yml config; then
        echo -e "${GREEN}‚úì docker-compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞${NC}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –≤ docker-compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ git –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
check_git_config() {
    echo -e "\n${BLUE}üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Git –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"
    
    if [ -f ".gitignore" ]; then
        echo -e "${GREEN}‚úì .gitignore —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
        if grep -q "docker/config/.env" ".gitignore"; then
            echo -e "${GREEN}‚úì .env —Ñ–∞–π–ª –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è${NC}"
        else
            echo -e "${RED}‚ùå .env —Ñ–∞–π–ª –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ .gitignore${NC}"
        fi
    else
        echo -e "${RED}‚ùå .gitignore –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç${NC}"
    fi

    if [ -d ".git" ]; then
        echo -e "${GREEN}‚úì Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω${NC}"
        echo -e "${YELLOW}–°—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:${NC}"
        git status
    else
        echo -e "${RED}‚ùå Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω${NC}"
    fi
}
# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local error_count=0

    check_prerequisites
    check_project_structure || error_count=$((error_count + $?))
    check_yaml_files || error_count=$((error_count + $?))
    check_env_variables || error_count=$((error_count + $?))
    check_docker_config || error_count=$((error_count + $?))
    check_git_config || error_count=$((error_count + $?))

    echo -e "\n${BLUE}üìä –ò—Ç–æ–≥–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏:${NC}"
    if [ $error_count -eq 0 ]; then
        echo -e "${GREEN}‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
    else
        echo -e "${RED}‚ùå –ù–∞–π–¥–µ–Ω–æ $error_count –æ—à–∏–±–æ–∫/–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π${NC}"
        exit 1
    fi
}

main "$@"
